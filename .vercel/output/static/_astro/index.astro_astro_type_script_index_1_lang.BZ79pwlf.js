function h(s){const t=document.querySelector(`[data-year="${s}"]`),i=document.querySelector(`[data-year-content="${s}"]`);t&&i&&(t.classList.contains("expanded")?(t.classList.remove("expanded"),t.classList.add("collapsed"),i.classList.remove("expanded"),i.classList.add("collapsed")):(t.classList.remove("collapsed"),t.classList.add("expanded"),i.classList.remove("collapsed"),i.classList.add("expanded")))}window.toggleYear=h;class l{constructor(){this.canvas=document.getElementById("learningGame"),this.ctx=this.canvas.getContext("2d"),this.startButton=document.getElementById("startGame"),this.scoreElement=document.getElementById("gameScore"),this.fallsElement=document.getElementById("gameFalls"),this.init()}init(){this.gameRunning=!1,this.gameSpeed=2,this.score=0,this.falls=0,this.player={x:50,y:120,width:20,height:30,velocityY:0,jumping:!1,falling:!1,onGround:!0},this.obstacles=[],this.obstacleTimer=0,this.startButton.addEventListener("click",()=>this.startGame()),document.addEventListener("keydown",t=>this.handleKeyPress(t)),this.draw()}startGame(){this.gameRunning=!0,this.score=0,this.falls=0,this.player.y=120,this.player.falling=!1,this.player.onGround=!0,this.obstacles=[],this.startButton.textContent="Running...",this.startButton.disabled=!0,this.gameLoop()}handleKeyPress(t){t.code==="Space"&&this.gameRunning&&this.player.onGround&&!this.player.falling&&(t.preventDefault(),this.jump()),t.code==="KeyR"&&this.player.falling&&(t.preventDefault(),this.getUp())}jump(){this.player.velocityY=-8,this.player.jumping=!0,this.player.onGround=!1}getUp(){this.player.falling=!1,this.player.onGround=!0,this.player.y=120,this.falls++,this.updateStats()}updatePhysics(){this.player.onGround||(this.player.velocityY+=.5,this.player.y+=this.player.velocityY,this.player.y>=120&&(this.player.y=120,this.player.velocityY=0,this.player.jumping=!1,this.player.onGround=!0))}spawnObstacle(){this.obstacleTimer++,this.obstacleTimer>120&&(this.obstacles.push({x:this.canvas.width,y:135,width:15,height:25}),this.obstacleTimer=0)}updateObstacles(){this.obstacles.forEach((t,i)=>{t.x-=this.gameSpeed,t.x+t.width<0&&(this.obstacles.splice(i,1),this.score+=10),this.checkCollision(this.player,t)&&!this.player.falling&&(this.player.falling=!0,this.player.onGround=!1)})}checkCollision(t,i){return t.x<i.x+i.width&&t.x+t.width>i.x&&t.y<i.y+i.height&&t.y+t.height>i.y}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#8B4513",this.ctx.fillRect(0,150,this.canvas.width,50),this.player.falling?this.drawFallenCharacter():this.drawRunningCharacter(),this.ctx.fillStyle="#FF0000",this.obstacles.forEach(t=>{this.ctx.fillRect(t.x,t.y,t.width,t.height)}),this.player.falling&&(this.ctx.fillStyle="#000000",this.ctx.font="16px Arial",this.ctx.textAlign="center",this.ctx.fillText("Press R to Get Back Up!",this.canvas.width/2,50))}drawRunningCharacter(){const t=this.player.x,i=this.player.y;this.ctx.fillStyle="#FFE0BD",this.ctx.beginPath(),this.ctx.arc(t+10,i+8,8,0,Math.PI*2),this.ctx.fill(),this.ctx.fillStyle="#000000",this.ctx.beginPath(),this.ctx.arc(t+7,i+6,1.5,0,Math.PI*2),this.ctx.fill(),this.ctx.beginPath(),this.ctx.arc(t+13,i+6,1.5,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle="#000000",this.ctx.lineWidth=1.5,this.ctx.beginPath(),this.ctx.arc(t+10,i+9,3,0,Math.PI),this.ctx.stroke(),this.ctx.fillStyle="#4444FF",this.ctx.fillRect(t+6,i+16,8,12),this.ctx.strokeStyle="#FFE0BD",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(t+6,i+20),this.ctx.lineTo(t+2,i+24),this.ctx.moveTo(t+14,i+20),this.ctx.lineTo(t+18,i+24),this.ctx.stroke();const e=Math.sin(this.score*.3)*2;this.ctx.strokeStyle="#000080",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(t+8,i+28),this.ctx.lineTo(t+6+e,i+32),this.ctx.moveTo(t+12,i+28),this.ctx.lineTo(t+14-e,i+32),this.ctx.stroke()}drawFallenCharacter(){const t=this.player.x,i=135;this.ctx.fillStyle="#FFE0BD",this.ctx.beginPath(),this.ctx.ellipse(t+15,i+5,8,6,0,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle="#000000",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(t+10,i+3),this.ctx.lineTo(t+14,i+7),this.ctx.moveTo(t+14,i+3),this.ctx.lineTo(t+10,i+7),this.ctx.moveTo(t+16,i+3),this.ctx.lineTo(t+20,i+7),this.ctx.moveTo(t+20,i+3),this.ctx.lineTo(t+16,i+7),this.ctx.stroke(),this.ctx.fillStyle="#FF4444",this.ctx.fillRect(t,i+8,25,6),this.ctx.strokeStyle="#FFE0BD",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(t+5,i+10),this.ctx.lineTo(t-2,i+6),this.ctx.moveTo(t+20,i+10),this.ctx.lineTo(t+27,i+6),this.ctx.moveTo(t+8,i+14),this.ctx.lineTo(t+5,i+18),this.ctx.moveTo(t+17,i+14),this.ctx.lineTo(t+20,i+18),this.ctx.stroke()}updateStats(){this.scoreElement.textContent=this.score,this.fallsElement.textContent=this.falls}gameLoop(){this.gameRunning&&(this.updatePhysics(),this.spawnObstacle(),this.updateObstacles(),this.draw(),this.updateStats(),requestAnimationFrame(()=>this.gameLoop()))}}document.addEventListener("DOMContentLoaded",()=>{new l});
